{'openapi': '3.1.0', 'info': {'title': 'FastAPI', 'version': '0.1.0'}, 'paths': {'/token': {'post': {'tags': ['authentication'], 'summary': 'Get Token', 'operationId': 'get_token_token_post', 'requestBody': {'content': {'application/x-www-form-urlencoded': {'schema': {'$ref': '#/components/schemas/Body_get_token_token_post'}}}, 'required': True}, 'responses': {'200': {'description': 'Successful Response', 'content': {'application/json': {'schema': {}}}}, '422': {'description': 'Validation Error', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/HTTPValidationError'}}}}}}}, '/user/': 
{'get': {'tags': ['user'], 'summary': 'Get All Users', 'operationId': 'get_all_users_user__get', 'responses': {'200': {'description': 'Successful Response', 'content': {'application/json': {'schema': {'items': {'$ref': '#/components/schemas/UserDisplay'}, 'type': 'array', 'title': 'Response Get All Users User  Get'}}}}}, 'security': [{'OAuth2PasswordBearer': []}]}, 'post': {'tags': ['user'], 'summary': 'Create User', 'operationId': 'create_user_user__post', 'requestBody': {'content': {'application/json': {'schema': {'$ref': '#/components/schemas/UserBase'}}}, 'required': True}, 'responses': {'200': {'description': 'Successful Response', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/UserDisplay'}}}}, '422': {'description': 'Validation Error', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/HTTPValidationError'}}}}}}}, '/user/{id}': {'get': {'tags': ['user'], 'summary': 'Get User', 'operationId': 'get_user_user__id__get', 'security': [{'OAuth2PasswordBearer': []}], 'parameters': [{'name': 'id', 'in': 'path', 'required': True, 'schema': {'type': 'integer', 'title': 'Id'}}], 'responses': {'200': {'description': 'Successful Response', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/UserDisplay'}}}}, '422': {'description': 'Validation Error', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/HTTPValidationError'}}}}}}}, '/user/{id}/update': {'post': {'tags': ['user'], 'summary': 'Update User', 'operationId': 'update_user_user__id__update_post', 'security': [{'OAuth2PasswordBearer': []}], 'parameters': [{'name': 'id', 'in': 'path', 'required': True, 'schema': {'type': 'integer', 'title': 'Id'}}], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/UserBase'}}}}, 'responses': {'200': {'description': 'Successful Response', 'content': {'application/json': {'schema': {}}}}, '422': {'description': 'Validation Error', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/HTTPValidationError'}}}}}}}, '/user/delete/{id}': {'post': {'tags': ['user'], 'summary': 'Delete User', 'operationId': 'delete_user_user_delete__id__post', 'security': [{'OAuth2PasswordBearer': []}], 'parameters': [{'name': 'id', 'in': 'path', 'required': True, 'schema': {'type': 'integer', 'title': 'Id'}}], 'responses': {'200': {'description': 'Successful Response', 'content': {'application/json': {'schema': {}}}}, '422': {'description': 'Validation Error', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/HTTPValidationError'}}}}}}}, '/blog/all': {'get': {'tags': ['blog'], 'summary': 'retreives all blogs', 'description': 'An API to simulate retreival of all blogs', 'operationId': 'get_all_blogs_blog_all_get', 'parameters': [{'name': 'page', 'in': 'query', 'required': False, 'schema': {'default': 1, 'title': 'Page'}}, {'name': 'page_size', 'in': 'query', 'required': False, 'schema': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'title': 'Page Size'}}], 'responses': {'200': {'description': 'A list of all blogs', 'content': {'application/json': {'schema': {}}}}, '422': {'description': 'Validation Error', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/HTTPValidationError'}}}}}}}, '/blog/{id}/comments/{comment_id}': {'get': {'tags': ['blog', 'comments'], 'summary': 'Get Comment', 'description': 'Simulates receiving comment of a blog\n**id** - Mandatory path parameter\n**comment_id** - Mandatory path parameter\n**valid** - Optional query parameter\n**username** - Optional query parameter', 'operationId': 'get_comment_blog__id__comments__comment_id__get', 'parameters': [{'name': 'id', 'in': 'path', 'required': True, 'schema': {'type': 'integer', 'title': 'Id'}}, 
{'name': 'comment_id', 'in': 'path', 'required': True, 'schema': {'type': 'integer', 'title': 'Comment Id'}}, {'name': 'valid', 'in': 'query', 'required': False, 'schema': {'type': 'boolean', 'default': True, 'title': 'Valid'}}, {'name': 'username', 'in': 'query', 'required': False, 'schema': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'title': 'Username'}}], 'responses': {'200': {'description': 'Successful Response', 'content': {'application/json': {'schema': {}}}}, '422': {'description': 'Validation Error', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/HTTPValidationError'}}}}}}}, '/blog/type/{type}': {'get': {'tags': ['blog'], 'summary': 'Get Blog Type', 'operationId': 'get_blog_type_blog_type__type__get', 'parameters': [{'name': 'type', 'in': 'path', 'required': True, 'schema': {'$ref': '#/components/schemas/BlogType'}}], 'responses': {'200': {'description': 'Successful Response', 'content': {'application/json': {'schema': {}}}}, '422': {'description': 'Validation Error', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/HTTPValidationError'}}}}}}}, '/blog/{id}': {'get': {'tags': ['blog'], 'summary': 'Get Id', 'operationId': 'get_id_blog__id__get', 'parameters': [{'name': 'id', 'in': 'path', 'required': True, 'schema': {'type': 'integer', 'title': 'Id'}}], 'responses': {'200': {'description': 'Successful Response', 'content': {'application/json': {'schema': {}}}}, '422': {'description': 'Validation Error', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/HTTPValidationError'}}}}}}}, '/blog/new/{id}': {'post': {'tags': ['blog'], 'summary': 'Create Blog', 'operationId': 'create_blog_blog_new__id__post', 'parameters': [{'name': 'id', 'in': 'path', 'required': True, 'schema': {'type': 'integer', 'title': 'Id'}}, {'name': 'version', 
'in': 'query', 'required': False, 'schema': {'type': 'integer', 'default': 1, 'title': 'Version'}}], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/BlogModel'}}}}, 'responses': {'200': 
{'description': 'Successful Response', 'content': {'application/json': {'schema': {}}}}, '422': {'description': 'Validation Error', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/HTTPValidationError'}}}}}}}, '/blog/new/{id}/comment/{comment_id}': {'post': {'tags': ['blog'], 'summary': 'Create Comment', 'operationId': 'create_comment_blog_new__id__comment__comment_id__post', 'parameters': [{'name': 'id', 'in': 'path', 'required': True, 'schema': {'type': 'integer', 'title': 'Id'}}, {'name': 'comment_id', 'in': 'path', 'required': True, 'schema': {'type': 'integer', 'maximum': 10, 'exclusiveMinimum': 5, 'title': 'Comment Id'}}, {'name': 'comment Title', 'in': 'query', 'required': False, 'schema': {'type': 'string', 'title': 'Title of the comment', 'description': 'Some description'}, 'description': 'Some description', 'deprecated': True}, {'name': 'version', 'in': 'query', 'required': False, 'schema': {'anyOf': [{'type': 'array', 'items': {'type': 'string'}}, {'type': 'null'}], 'default': ['1.0', '1.1', '1.2'], 'title': 'Version'}}], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Body_create_comment_blog_new__id__comment__comment_id__post'}}}}, 'responses': {'200': {'description': 'Successful Response', 'content': {'application/json': {'schema': {}}}}, '422': {'description': 'Validation Error', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/HTTPValidationError'}}}}}}}, '/article/': {'post': {'tags': ['article'], 'summary': 'Create Article', 'operationId': 'create_article_article__post', 'requestBody': {'content': {'application/json': {'schema': {'$ref': '#/components/schemas/ArticleBase'}}}, 'required': True}, 'responses': {'200': {'description': 'Successful Response', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/ArticleDisplay'}}}}, '422': {'description': 'Validation Error', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/HTTPValidationError'}}}}}}}, '/article/{id}': {'get': {'tags': ['article'], 'summary': 'Get Article', 'operationId': 'get_article_article__id__get', 'security': [{'OAuth2PasswordBearer': []}], 'parameters': [{'name': 'id', 'in': 'path', 'required': True, 'schema': {'type': 'integer', 'title': 'Id'}}], 'responses': {'200': {'description': 'Successful Response', 'content': {'application/json': {'schema': {}}}}, '422': {'description': 'Validation Error', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/HTTPValidationError'}}}}}}}, '/product/all': {'get': {'tags': ['product'], 'summary': 'Get All Products', 'operationId': 'get_all_products_product_all_get', 'responses': {'200': {'description': 'Successful Response', 'content': {'application/json': {'schema': {}}}}}}}, '/product/{id}': {'get': {'tags': ['product'], 'summary': 'Get Product', 'operationId': 'get_product_product__id__get', 'parameters': [{'name': 'id', 'in': 'path', 'required': True, 'schema': {'type': 'integer', 'title': 'Id'}}], 'responses': {'200': {'description': 'Returns the HTML of an object', 'content': {'application/json': {'schema': {}}, 'text/html': {'example': '<div> Product </div>'}}}, '404': {'content': {'text/plain': {'example': 'product not found'}}, 'description': 'A plain text error message'}, '422': {'description': 'Validation Error', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/HTTPValidationError'}}}}}}}, '/file/get': {'post': {'tags': ['file'], 'summary': 'Get File', 'operationId': 'get_file_file_get_post', 'requestBody': {'content': {'multipart/form-data': {'schema': {'$ref': '#/components/schemas/Body_get_file_file_get_post'}}}, 'required': True}, 'responses': {'200': {'description': 'Successful Response', 'content': {'application/json': {'schema': {}}}}, '422': {'description': 'Validation Error', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/HTTPValidationError'}}}}}}}, '/file/uploadFile': {'post': {'tags': ['file'], 'summary': 'Upload File', 'operationId': 'upload_file_file_uploadFile_post', 'requestBody': {'content': {'multipart/form-data': {'schema': {'$ref': '#/components/schemas/Body_upload_file_file_uploadFile_post'}}}, 'required': True}, 'responses': {'200': {'description': 'Successful Response', 'content': {'application/json': {'schema': {}}}}, '422': {'description': 'Validation Error', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/HTTPValidationError'}}}}}}}, '/file/download/{name}': {'get': {'tags': ['file'], 'summary': 'Get File', 'operationId': 'get_file_file_download__name__get', 'parameters': [{'name': 'name', 'in': 'path', 'required': True, 'schema': {'type': 'string', 'title': 'Name'}}], 'responses': {'200': {'description': 'Successful Response'}, '422': {'description': 'Validation Error', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/HTTPValidationError'}}}}}}}, '/templates/products/{id}': {'get': {'tags': ['templates'], 'summary': 
'Get Product', 'operationId': 'get_product_templates_products__id__get', 'parameters': [{'name': 'id', 'in': 'path', 'required': True, 'schema': {'type': 'string', 'title': 'Id'}}], 'responses': {'200': {'description': 'Successful Response', 'content': {'text/html': {'schema': {'type': 'string'}}}}, '422': {'description': 'Validation Error', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/HTTPValidationError'}}}}}}}}, 'components': {'schemas': {'Article': {'properties': {'title': {'type': 'string', 'title': 'Title'}, 'content': {'type': 'string', 'title': 'Content'}, 'published': {'type': 'boolean', 'title': 'Published'}}, 'type': 'object', 'required': ['title', 'content', 'published'], 'title': 'Article'}, 'ArticleBase': {'properties': {'title': {'type': 'string', 'title': 'Title'}, 'content': {'type': 'string', 'title': 'Content'}, 'published': {'type': 'boolean', 'title': 'Published'}, 'creator_id': {'type': 'integer', 'title': 'Creator Id'}}, 'type': 'object', 'required': ['title', 'content', 'published', 'creator_id'], 'title': 'ArticleBase'}, 'ArticleDisplay': {'properties': {'title': {'type': 'string', 'title': 'Title'}, 'content': {'type': 'string', 'title': 'Content'}, 'published': {'type': 'boolean', 'title': 'Published'}, 'user': {'$ref': '#/components/schemas/User'}}, 'type': 'object', 'required': ['title', 'content', 'published', 'user'], 'title': 'ArticleDisplay'}, 'BlogModel': {'properties': {'title': {'type': 'string', 'title': 'Title'}, 'content': {'type': 'string', 'title': 'Content'}, 'number_of_comments': {'type': 'integer', 'title': 'Number Of Comments'}, 'published': {'anyOf': [{'type': 'boolean'}, {'type': 'null'}], 'title': 'Published'}, 'tags': {'items': {'type': 'string'}, 'type': 'array', 'title': 'Tags', 'default': []}, 'metadata': {'additionalProperties': {'type': 'string'}, 'type': 'object', 'title': 'Metadata', 'default': {'key1': 'val1'}}}, 'type': 'object', 'required': ['title', 'content', 'number_of_comments', 'published'], 'title': 'BlogModel'}, 'BlogType': {'type': 'string', 'enum': ['short', 'story', 'howto'], 'title': 'BlogType'}, 'Body_create_comment_blog_new__id__comment__comment_id__post': {'properties': {'blog': {'$ref': '#/components/schemas/BlogModel'}, 'content': {'type': 'string', 'maxLength': 50, 'minLength': 10, 'title': 'Content'}}, 'type': 'object', 'required': ['blog', 'content'], 'title': 'Body_create_comment_blog_new__id__comment__comment_id__post'}, 'Body_get_file_file_get_post': {'properties': {'file': {'type': 'string', 'format': 'binary', 'title': 'File'}}, 'type': 'object', 'required': ['file'], 'title': 'Body_get_file_file_get_post'}, 'Body_get_token_token_post': {'properties': {'grant_type': {'anyOf': [{'type': 'string', 'pattern': 'password'}, {'type': 'null'}], 'title': 'Grant Type'}, 'username': {'type': 'string', 'title': 'Username'}, 'password': {'type': 'string', 'title': 'Password'}, 'scope': {'type': 'string', 'title': 'Scope', 'default': ''}, 'client_id': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'title': 'Client Id'}, 'client_secret': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'title': 'Client Secret'}}, 'type': 'object', 'required': ['username', 'password'], 'title': 'Body_get_token_token_post'}, 'Body_upload_file_file_uploadFile_post': {'properties': {'uploadFile': {'type': 'string', 'format': 'binary', 'title': 'Uploadfile'}}, 'type': 'object', 'required': ['uploadFile'], 'title': 'Body_upload_file_file_uploadFile_post'}, 'HTTPValidationError': {'properties': {'detail': {'items': {'$ref': '#/components/schemas/ValidationError'}, 'type': 'array', 'title': 'Detail'}}, 'type': 'object', 'title': 'HTTPValidationError'}, 'User': {'properties': {'id': {'type': 'integer', 'title': 'Id'}, 'username': {'type': 'string', 'title': 'Username'}}, 'type': 'object', 'required': ['id', 'username'], 'title': 'User'}, 'UserBase': {'properties': {'username': {'type': 'string', 'title': 'Username'}, 'email': {'type': 'string', 'title': 'Email'}, 'password': {'type': 'string', 'title': 'Password'}}, 'type': 'object', 'required': ['username', 'email', 'password'], 'title': 'UserBase'}, 'UserDisplay': {'properties': {'username': {'type': 'string', 'title': 'Username'}, 'email': {'type': 'string', 'title': 'Email'}, 'items': {'items': {'$ref': '#/components/schemas/Article'}, 'type': 'array', 'title': 'Items', 'default': []}}, 'type': 'object', 'required': ['username', 'email'], 'title': 'UserDisplay'}, 'ValidationError': {'properties': {'loc': {'items': {'anyOf': [{'type': 'string'}, {'type': 'integer'}]}, 'type': 'array', 'title': 'Location'}, 'msg': {'type': 'string', 'title': 'Message'}, 'type': {'type': 'string', 'title': 'Error Type'}}, 'type': 'object', 'required': ['loc', 'msg', 'type'], 'title': 'ValidationError'}}, 'securitySchemes': {'OAuth2PasswordBearer': {'type': 'oauth2', 'flows': {'password': {'scopes': {}, 'tokenUrl': 'token'}}}}}}
